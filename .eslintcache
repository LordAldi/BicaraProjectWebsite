[{"E:\\__code\\test\\bicara-website\\src\\index.js":"1","E:\\__code\\test\\bicara-website\\src\\reportWebVitals.js":"2","E:\\__code\\test\\bicara-website\\src\\App.js":"3","E:\\__code\\test\\bicara-website\\src\\hoc\\Layout\\Layout.js":"4","E:\\__code\\test\\bicara-website\\src\\containers\\Home\\Home.js":"5","E:\\__code\\test\\bicara-website\\src\\containers\\Explore\\Explore.js":"6","E:\\__code\\test\\bicara-website\\src\\containers\\About\\About.js":"7","E:\\__code\\test\\bicara-website\\src\\containers\\Class\\Class.js":"8","E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\SignIn\\SignIn.js":"9","E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\Login\\Login.js":"10","E:\\__code\\test\\bicara-website\\src\\Constant.js":"11","E:\\__code\\test\\bicara-website\\src\\containers\\Video\\Video.js":"12","E:\\__code\\test\\bicara-website\\src\\Provider\\UserProvider\\UserProvider.js":"13","E:\\__code\\test\\bicara-website\\src\\containers\\Category\\Category.js":"14","E:\\__code\\test\\bicara-website\\src\\containers\\Class\\ClassItem\\ClassItem.js":"15","E:\\__code\\test\\bicara-website\\src\\containers\\EditorsPick\\EditorsPick.js":"16","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\Event.js":"17","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\EventItem\\EventItem.js":"18","E:\\__code\\test\\bicara-website\\src\\components\\Card\\CategoryCard.js":"19","E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\Coursel.js":"20","E:\\__code\\test\\bicara-website\\src\\components\\Footer\\Footer.js":"21","E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselCoba.js":"22","E:\\__code\\test\\bicara-website\\src\\components\\Card\\ClassCard.js":"23","E:\\__code\\test\\bicara-website\\src\\components\\Card\\ContentCard.js":"24","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Navbar\\Navbar.js":"25","E:\\__code\\test\\bicara-website\\src\\components\\UI\\Button\\Button.js":"26","E:\\__code\\test\\bicara-website\\src\\components\\Card\\EventCard.js":"27","E:\\__code\\test\\bicara-website\\src\\components\\UI\\Input\\Input.js":"28","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\Sidebar.js":"29","E:\\__code\\test\\bicara-website\\src\\components\\Card\\StaffCard.js":"30","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"31"},{"size":1329,"mtime":1608466702605,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1848,"mtime":1608467117360,"results":"35","hashOfConfig":"33"},{"size":763,"mtime":1607618851553,"results":"36","hashOfConfig":"33"},{"size":5714,"mtime":1608311714344,"results":"37","hashOfConfig":"33"},{"size":2588,"mtime":1608467114502,"results":"38","hashOfConfig":"33"},{"size":4189,"mtime":1608467808025,"results":"39","hashOfConfig":"33"},{"size":1331,"mtime":1608305075446,"results":"40","hashOfConfig":"33"},{"size":5117,"mtime":1607717453976,"results":"41","hashOfConfig":"33"},{"size":4093,"mtime":1607717607563,"results":"42","hashOfConfig":"33"},{"size":45,"mtime":1607245628617,"results":"43","hashOfConfig":"33"},{"size":2610,"mtime":1608309634549,"results":"44","hashOfConfig":"33"},{"size":1303,"mtime":1607622109348,"results":"45","hashOfConfig":"33"},{"size":1925,"mtime":1608300861546,"results":"46","hashOfConfig":"33"},{"size":2393,"mtime":1608468203784,"results":"47","hashOfConfig":"33"},{"size":1990,"mtime":1607791095535,"results":"48","hashOfConfig":"33"},{"size":1586,"mtime":1608311490822,"results":"49","hashOfConfig":"33"},{"size":1567,"mtime":1608310839876,"results":"50","hashOfConfig":"33"},{"size":602,"mtime":1607711875592,"results":"51","hashOfConfig":"33"},{"size":782,"mtime":1608286710099,"results":"52","hashOfConfig":"33"},{"size":2527,"mtime":1608467931572,"results":"53","hashOfConfig":"33"},{"size":712,"mtime":1608316059732,"results":"54","hashOfConfig":"33"},{"size":1214,"mtime":1607787981993,"results":"55","hashOfConfig":"33"},{"size":989,"mtime":1607715742460,"results":"56","hashOfConfig":"33"},{"size":638,"mtime":1608279794365,"results":"57","hashOfConfig":"33"},{"size":1228,"mtime":1607532402674,"results":"58","hashOfConfig":"33"},{"size":1086,"mtime":1608312952523,"results":"59","hashOfConfig":"33"},{"size":725,"mtime":1607008375054,"results":"60","hashOfConfig":"33"},{"size":786,"mtime":1607618851546,"results":"61","hashOfConfig":"33"},{"size":884,"mtime":1608316051118,"results":"62","hashOfConfig":"33"},{"size":1174,"mtime":1608467084201,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6odwrj",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\__code\\test\\bicara-website\\src\\index.js",["139"],"E:\\__code\\test\\bicara-website\\src\\reportWebVitals.js",[],["140","141"],"E:\\__code\\test\\bicara-website\\src\\App.js",[],"E:\\__code\\test\\bicara-website\\src\\hoc\\Layout\\Layout.js",[],["142","143"],"E:\\__code\\test\\bicara-website\\src\\containers\\Home\\Home.js",["144"],"// import Coursel from \"../../components/Coursel/Coursel\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport ClassCard from \"../../components/Card/ClassCard\";\r\n// import { useContext } from \"react\";\r\n// import { UserContext } from \"../../Provider/UserProvider/UserProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CourselCoba from \"../../components/Coursel/CourselCoba\";\r\nimport EventCard from \"../../components/Card/EventCard\";\r\nconst DATA = gql`\r\n  query getCoursel {\r\n    coursel {\r\n      CourselItem {\r\n        id\r\n        Link\r\n        picture {\r\n          url\r\n          id\r\n        }\r\n      }\r\n    }\r\n    acaras(limit: 6, sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n    videos(limit: 8, sort: \"published_at:desc\") {\r\n      id\r\n      judul\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n    editors(limit: 3, sort: \"published_at:desc\") {\r\n      id\r\n      thumbnail {\r\n        url\r\n      }\r\n      name\r\n      slug\r\n    }\r\n    classes(limit: 3, sort: \"published_at:desc\") {\r\n      id\r\n      slug\r\n      thumbnail {\r\n        url\r\n      }\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Home() {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  // const { user } = useContext(UserContext);\r\n  return (\r\n    <div className=\"w-screen\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home</title>\r\n        <meta name=\"description\" content=\"Home for Bicara Project\" />\r\n      </Helmet>\r\n      {!loading && data ? (\r\n        <CourselCoba data={data.coursel.CourselItem} />\r\n      ) : (\r\n        <div className=\"h-96 bg-secondary w-full animate-pulse\"></div>\r\n      )}\r\n      <div className=\"container mx-auto lg:px-20 my-10\">\r\n        {/* <p>hallo {user.username}</p>\r\n        <p> {user.isAuth ? \"isAuth\" : \"notAuth\"}</p>\r\n        <p>your ID {user.ID}</p> */}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\t\">Events</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {data.acaras.map((event, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${event.slug ? \"/event/\" + event.slug : \"/\"}`}\r\n                  key={event.id}\r\n                >\r\n                  <EventCard rounded data={event} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\t\">New Release</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {data.videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                  key={video.id}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\tmt-6\">EDITORS' PICK</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            {data.editors.map((video, i) => {\r\n              return (\r\n                <Link key={video.id} to={`/ep/${video.slug}`}>\r\n                  <ContentCard editor data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold mt-6\t\">Class</h3>\r\n        {!loading && data ? (\r\n          <div>\r\n            <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n              {data.classes.map((classe, i) => {\r\n                return <ClassCard editor key={classe.id} data={classe} />;\r\n              })}\r\n            </div>\r\n            <div className=\"flex justify-end\">\r\n              <Link to=\"/class\">\r\n                <p>see all class</p>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Explore\\Explore.js",["145"],"E:\\__code\\test\\bicara-website\\src\\containers\\About\\About.js",["146","147"],"E:\\__code\\test\\bicara-website\\src\\containers\\Class\\Class.js",["148"],"import { useQuery, gql } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport banner from \"../../assets/images/bannerClass.jpg\";\r\nimport ClassCard from \"../../components/Card/ClassCard\";\r\nconst DATA = gql`\r\n  query getClasses {\r\n    classes(sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      slug\r\n      description\r\n      thumbnail {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Class = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  let show = <div>Loading...</div>;\r\n  if (!loading && data) {\r\n    show = (\r\n      <>\r\n        <div className=\"mb-10\">\r\n          <img src={banner} alt=\"CLASS\" />\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <div className=\"container mx-auto lg:px-20\">\r\n            <div className=\"grid grid-cols-2  md:grid-cols-3  justify-center\t gap-4\">\r\n              {data.classes.map((classe, i) => {\r\n                return <ClassCard editor key={classe.id} data={classe} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Class</title>\r\n        <meta name=\"description\" content=\"Class for Bicara Project\" />\r\n      </Helmet>\r\n      {show}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n",["149","150"],"E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\SignIn\\SignIn.js",[],["151","152"],"E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\Login\\Login.js",[],"E:\\__code\\test\\bicara-website\\src\\Constant.js",[],["153","154"],"E:\\__code\\test\\bicara-website\\src\\containers\\Video\\Video.js",["155","156"],"import { useQuery, gql } from \"@apollo/client\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst DATA = gql`\r\n  query Video($slug: String!) {\r\n    videoBySlug(slug: $slug) {\r\n      id\r\n      slug\r\n      published_at\r\n      judul\r\n      by\r\n      description\r\n      source\r\n      categories {\r\n        id\r\n        name\r\n      }\r\n    }\r\n    videos(limit: 5, sort: \"published_at:desc\") {\r\n      id\r\n      thumbnail {\r\n        url\r\n      }\r\n      judul\r\n      slug\r\n    }\r\n  }\r\n`;\r\n\r\nconst Video = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = null;\r\n  if (data) {\r\n    const { source, judul, by, description, categories } = data.videoBySlug;\r\n    let news = data.videos.map((video) => {\r\n      return (\r\n        <Link\r\n          to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n          key={video.id}\r\n        >\r\n          <ContentCard rounded key={video.id} data={video} />\r\n        </Link>\r\n      );\r\n    });\r\n    show = (\r\n      <div className=\"container mx-auto px-10 flex items-center flex-col\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{judul}</title>\r\n          <meta name=\"description\" content={description} />\r\n        </Helmet>\r\n        <div className=\"w-96 md:w-700\">\r\n          <div className=\"relative h-0 pb-fluid-video \">\r\n            <ReactPlayer\r\n              className=\"absolute top-0 left-0 \"\r\n              controls={true}\r\n              pip\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              url={source}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"grid md:grid-cols-4 gap-4\">\r\n          <div className=\"md:col-span-3\">\r\n            <h2 className=\"text-2xl mb-4 text-bold\">{judul}</h2>\r\n            <p className=\"text-gray-300\">by {by}</p>\r\n            <ReactMarkdown className=\"markdown\">{description}</ReactMarkdown>\r\n          </div>\r\n          <div>{news}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data && !loading ? (\r\n        show\r\n      ) : (\r\n        <div>\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Video</title>\r\n            <meta name=\"description\" content=\"Video For Bicara Project\" />\r\n          </Helmet>\r\n          loading ...{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","E:\\__code\\test\\bicara-website\\src\\Provider\\UserProvider\\UserProvider.js",["157"],"E:\\__code\\test\\bicara-website\\src\\containers\\Category\\Category.js",["158","159","160"],"import { useQuery, gql, from } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport { Helmet } from \"react-helmet\";\r\nconst DATA = gql`\r\n  query Category($slug: String!) {\r\n    categoryBySlug(slug: $slug) {\r\n      id\r\n      slug\r\n      published_at\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      videos {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Category = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Category</title>\r\n        <meta name=\"description\" content=\"Category for Bicara Project\" />\r\n      </Helmet>\r\n      <div>Loading...</div>\r\n    </>\r\n  );\r\n  if (!loading && data) {\r\n    const { id, name, description, thumbnail, videos } = data.categoryBySlug;\r\n    show = (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{name}</title>\r\n          <meta name=\"description\" content={description} />\r\n        </Helmet>\r\n        <div className=\"flex justify-center \">\r\n          <img src={thumbnail.url} alt={name} />\r\n        </div>\r\n        <div className=\"container mx-auto lg:px-20\">\r\n          <div className=\"mt-20 grid grid-cols-1 lg:grid-cols-2 justify-center\t gap-4\">\r\n            {videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  key={video.id}\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                >\r\n                  <ContentCard rounded data={video} popular />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return <div>{show}</div>;\r\n};\r\n\r\nexport default Category;\r\n",["161","162"],"E:\\__code\\test\\bicara-website\\src\\containers\\Class\\ClassItem\\ClassItem.js",["163","164"],"E:\\__code\\test\\bicara-website\\src\\containers\\EditorsPick\\EditorsPick.js",["165","166","167"],"import React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nconst DATA = gql`\r\n  query Editor($slug: String) {\r\n    editorBySlug(slug: $slug) {\r\n      id\r\n      name\r\n      slug\r\n      thumbnail {\r\n        url\r\n      }\r\n      videos {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst EditorsPick = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = null;\r\n  if (data) {\r\n    const { id, name, thumbnail, videos } = data.editorBySlug;\r\n\r\n    show = (\r\n      <div>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{name}</title>\r\n          <meta name=\"description\" content={name} />\r\n        </Helmet>\r\n        <div className=\"flex justify-center items-center \">\r\n          <img src={thumbnail.url} className=\"w-72 md:w-96\" />\r\n        </div>\r\n        <div>\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                  key={video.id}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {data && !loading ? (\r\n        show\r\n      ) : (\r\n        <div>\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Video</title>\r\n            <meta name=\"description\" content=\"Video For Bicara Project\" />\r\n          </Helmet>\r\n          loading ...{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorsPick;\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\Event.js",["168"],"import React from \"react\";\r\nimport banner from \"../../assets/images/bannerEvent.jpg\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport EventCard from \"../../components/Card/EventCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nconst DATA = gql`\r\n  query event {\r\n    acaras(sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n  }\r\n`;\r\nconst EventPage = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  let show = <div>Loading...</div>;\r\n  if (!loading && data) {\r\n    show = (\r\n      <>\r\n        <div className=\"mb-10\">\r\n          <img src={banner} alt=\"CLASS\" />\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <div className=\"container mx-auto lg:px-20\">\r\n            <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n              {data.acaras.map((event, i) => {\r\n                return (\r\n                  <Link\r\n                    to={`${event.slug ? \"/event/\" + event.slug : \"/\"}`}\r\n                    key={event.id}\r\n                  >\r\n                    <EventCard rounded data={event} />\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Event</title>\r\n        <meta name=\"description\" content=\"Event for Bicara Project\" />\r\n      </Helmet>\r\n      {show}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\EventItem\\EventItem.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\CategoryCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\Coursel.js",[],["169","170"],"E:\\__code\\test\\bicara-website\\src\\components\\Footer\\Footer.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselCoba.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\ClassCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\ContentCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Navbar\\Navbar.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\UI\\Button\\Button.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\EventCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\UI\\Input\\Input.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\Sidebar.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\StaffCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],{"ruleId":"171","severity":1,"message":"172","line":7,"column":39,"nodeType":"173","messageId":"174","endLine":7,"endColumn":42},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"171","severity":1,"message":"181","line":60,"column":20,"nodeType":"173","messageId":"174","endLine":60,"endColumn":25},{"ruleId":"171","severity":1,"message":"181","line":37,"column":20,"nodeType":"173","messageId":"174","endLine":37,"endColumn":25},{"ruleId":"171","severity":1,"message":"181","line":26,"column":20,"nodeType":"173","messageId":"174","endLine":26,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":101,"column":11,"nodeType":"184","endLine":101,"endColumn":57},{"ruleId":"171","severity":1,"message":"181","line":20,"column":20,"nodeType":"173","messageId":"174","endLine":20,"endColumn":25},{"ruleId":"175","replacedBy":"185"},{"ruleId":"177","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"177","replacedBy":"188"},{"ruleId":"175","replacedBy":"189"},{"ruleId":"177","replacedBy":"190"},{"ruleId":"171","severity":1,"message":"181","line":35,"column":20,"nodeType":"173","messageId":"174","endLine":35,"endColumn":25},{"ruleId":"171","severity":1,"message":"191","line":42,"column":45,"nodeType":"173","messageId":"174","endLine":42,"endColumn":55},{"ruleId":"192","severity":1,"message":"193","line":55,"column":6,"nodeType":"194","endLine":55,"endColumn":12,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"196","line":1,"column":25,"nodeType":"173","messageId":"174","endLine":1,"endColumn":29},{"ruleId":"171","severity":1,"message":"181","line":28,"column":20,"nodeType":"173","messageId":"174","endLine":28,"endColumn":25},{"ruleId":"171","severity":1,"message":"197","line":44,"column":13,"nodeType":"173","messageId":"174","endLine":44,"endColumn":15},{"ruleId":"175","replacedBy":"198"},{"ruleId":"177","replacedBy":"199"},{"ruleId":"171","severity":1,"message":"181","line":29,"column":20,"nodeType":"173","messageId":"174","endLine":29,"endColumn":25},{"ruleId":"171","severity":1,"message":"197","line":37,"column":7,"nodeType":"173","messageId":"174","endLine":37,"endColumn":9},{"ruleId":"171","severity":1,"message":"181","line":27,"column":20,"nodeType":"173","messageId":"174","endLine":27,"endColumn":25},{"ruleId":"171","severity":1,"message":"197","line":34,"column":13,"nodeType":"173","messageId":"174","endLine":34,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":44,"column":11,"nodeType":"184","endLine":44,"endColumn":63},{"ruleId":"171","severity":1,"message":"181","line":20,"column":20,"nodeType":"173","messageId":"174","endLine":20,"endColumn":25},{"ruleId":"175","replacedBy":"200"},{"ruleId":"177","replacedBy":"201"},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","no-native-reassign",["202"],"no-negated-in-lhs",["203"],["202"],["203"],"'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["202"],["203"],["202"],["203"],["202"],["203"],"'categories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'from' is defined but never used.","'id' is assigned a value but never used.",["202"],["203"],["202"],["203"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [data, error, loading]",{"range":"207","text":"208"},[1162,1168],"[data, error, loading]"]