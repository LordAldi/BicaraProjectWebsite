[{"E:\\__code\\test\\bicara-website\\src\\index.js":"1","E:\\__code\\test\\bicara-website\\src\\reportWebVitals.js":"2","E:\\__code\\test\\bicara-website\\src\\App.js":"3","E:\\__code\\test\\bicara-website\\src\\hoc\\Layout\\Layout.js":"4","E:\\__code\\test\\bicara-website\\src\\containers\\Home\\Home.js":"5","E:\\__code\\test\\bicara-website\\src\\containers\\Explore\\Explore.js":"6","E:\\__code\\test\\bicara-website\\src\\containers\\About\\About.js":"7","E:\\__code\\test\\bicara-website\\src\\containers\\Class\\Class.js":"8","E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\SignIn\\SignIn.js":"9","E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\Login\\Login.js":"10","E:\\__code\\test\\bicara-website\\src\\Constant.js":"11","E:\\__code\\test\\bicara-website\\src\\containers\\Video\\Video.js":"12","E:\\__code\\test\\bicara-website\\src\\Provider\\UserProvider\\UserProvider.js":"13","E:\\__code\\test\\bicara-website\\src\\containers\\Category\\Category.js":"14","E:\\__code\\test\\bicara-website\\src\\containers\\Class\\ClassItem\\ClassItem.js":"15","E:\\__code\\test\\bicara-website\\src\\containers\\EditorsPick\\EditorsPick.js":"16","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\Event.js":"17","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\EventItem\\EventItem.js":"18","E:\\__code\\test\\bicara-website\\src\\components\\Card\\CategoryCard.js":"19","E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\Coursel.js":"20","E:\\__code\\test\\bicara-website\\src\\components\\Footer\\Footer.js":"21","E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselCoba.js":"22","E:\\__code\\test\\bicara-website\\src\\components\\Card\\ClassCard.js":"23","E:\\__code\\test\\bicara-website\\src\\components\\Card\\ContentCard.js":"24","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Navbar\\Navbar.js":"25","E:\\__code\\test\\bicara-website\\src\\components\\UI\\Button\\Button.js":"26","E:\\__code\\test\\bicara-website\\src\\components\\Card\\EventCard.js":"27","E:\\__code\\test\\bicara-website\\src\\components\\UI\\Input\\Input.js":"28","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\Sidebar.js":"29","E:\\__code\\test\\bicara-website\\src\\components\\Card\\StaffCard.js":"30","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"31","E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselItem\\CourselItemCoba.js":"32","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"33","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\DrawerToggle\\DrawerToggle.js":"34","E:\\__code\\test\\bicara-website\\src\\components\\UI\\Backdrop\\Backdrop.js":"35"},{"size":1329,"mtime":1608474774423,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1848,"mtime":1608467117360,"results":"39","hashOfConfig":"37"},{"size":763,"mtime":1607618851553,"results":"40","hashOfConfig":"37"},{"size":5714,"mtime":1608544021394,"results":"41","hashOfConfig":"37"},{"size":2588,"mtime":1608467114502,"results":"42","hashOfConfig":"37"},{"size":5316,"mtime":1608557431296,"results":"43","hashOfConfig":"37"},{"size":1331,"mtime":1608305075446,"results":"44","hashOfConfig":"37"},{"size":5117,"mtime":1607717453976,"results":"45","hashOfConfig":"37"},{"size":4093,"mtime":1607717607563,"results":"46","hashOfConfig":"37"},{"size":45,"mtime":1607245628617,"results":"47","hashOfConfig":"37"},{"size":2610,"mtime":1608309634549,"results":"48","hashOfConfig":"37"},{"size":1265,"mtime":1607717288272,"results":"49","hashOfConfig":"37"},{"size":1925,"mtime":1608300861546,"results":"50","hashOfConfig":"37"},{"size":2393,"mtime":1608468203784,"results":"51","hashOfConfig":"37"},{"size":1990,"mtime":1607791095535,"results":"52","hashOfConfig":"37"},{"size":1586,"mtime":1608311490822,"results":"53","hashOfConfig":"37"},{"size":1567,"mtime":1608310839876,"results":"54","hashOfConfig":"37"},{"size":602,"mtime":1607711875592,"results":"55","hashOfConfig":"37"},{"size":782,"mtime":1608286710099,"results":"56","hashOfConfig":"37"},{"size":4334,"mtime":1608558940981,"results":"57","hashOfConfig":"37"},{"size":712,"mtime":1608473389029,"results":"58","hashOfConfig":"37"},{"size":1214,"mtime":1607787981993,"results":"59","hashOfConfig":"37"},{"size":989,"mtime":1607715742460,"results":"60","hashOfConfig":"37"},{"size":638,"mtime":1608279794365,"results":"61","hashOfConfig":"37"},{"size":1228,"mtime":1607532402674,"results":"62","hashOfConfig":"37"},{"size":1086,"mtime":1608312952523,"results":"63","hashOfConfig":"37"},{"size":725,"mtime":1607008375054,"results":"64","hashOfConfig":"37"},{"size":786,"mtime":1607618851546,"results":"65","hashOfConfig":"37"},{"size":973,"mtime":1608544890673,"results":"66","hashOfConfig":"37"},{"size":1177,"mtime":1608554307846,"results":"67","hashOfConfig":"37"},{"size":580,"mtime":1608472956321,"results":"68","hashOfConfig":"37"},{"size":471,"mtime":1608279877238,"results":"69","hashOfConfig":"37"},{"size":976,"mtime":1606914511721,"results":"70","hashOfConfig":"37"},{"size":235,"mtime":1606917625185,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"6odwrj",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\__code\\test\\bicara-website\\src\\index.js",["167"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\nimport { ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { UserProvider } from \"./Provider/UserProvider/UserProvider\";\nconst httpLink = createHttpLink({\n  uri: \"https://admin.bicaraproject.com/graphql\",\n  // uri: \"http://localhost:1337/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? \"Bearer \" + token : \"\",\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <UserProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </UserProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n",["168","169"],"E:\\__code\\test\\bicara-website\\src\\reportWebVitals.js",[],["170","171"],"E:\\__code\\test\\bicara-website\\src\\App.js",[],["172","173"],"E:\\__code\\test\\bicara-website\\src\\hoc\\Layout\\Layout.js",[],["174","175"],"E:\\__code\\test\\bicara-website\\src\\containers\\Home\\Home.js",["176"],"// import Coursel from \"../../components/Coursel/Coursel\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport ClassCard from \"../../components/Card/ClassCard\";\r\n// import { useContext } from \"react\";\r\n// import { UserContext } from \"../../Provider/UserProvider/UserProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CourselCoba from \"../../components/Coursel/CourselCoba\";\r\nimport EventCard from \"../../components/Card/EventCard\";\r\nconst DATA = gql`\r\n  query getCoursel {\r\n    coursel {\r\n      CourselItem {\r\n        id\r\n        Link\r\n        picture {\r\n          url\r\n          id\r\n        }\r\n      }\r\n    }\r\n    acaras(limit: 6, sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n    videos(limit: 8, sort: \"published_at:desc\") {\r\n      id\r\n      judul\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n    editors(limit: 3, sort: \"published_at:desc\") {\r\n      id\r\n      thumbnail {\r\n        url\r\n      }\r\n      name\r\n      slug\r\n    }\r\n    classes(limit: 3, sort: \"published_at:desc\") {\r\n      id\r\n      slug\r\n      thumbnail {\r\n        url\r\n      }\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Home() {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  // const { user } = useContext(UserContext);\r\n  return (\r\n    <div className=\"w-screen\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home</title>\r\n        <meta name=\"description\" content=\"Home for Bicara Project\" />\r\n      </Helmet>\r\n      {!loading && data ? (\r\n        <CourselCoba data={data.coursel.CourselItem} />\r\n      ) : (\r\n        <div className=\"h-96 bg-secondary w-full animate-pulse\"></div>\r\n      )}\r\n      <div className=\"container mx-auto lg:px-20 my-10\">\r\n        {/* <p>hallo {user.username}</p>\r\n        <p> {user.isAuth ? \"isAuth\" : \"notAuth\"}</p>\r\n        <p>your ID {user.ID}</p> */}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\t\">Events</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {data.acaras.map((event, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${event.slug ? \"/event/\" + event.slug : \"/\"}`}\r\n                  key={event.id}\r\n                >\r\n                  <EventCard rounded data={event} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\t\">New Release</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {data.videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                  key={video.id}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold\tmt-6\">Editor's Pick</h3>\r\n        {!loading && data ? (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            {data.editors.map((video, i) => {\r\n              return (\r\n                <Link key={video.id} to={`/ep/${video.slug}`}>\r\n                  <ContentCard editor data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n        <h3 className=\"text-2xl\tp-2 font-bold mt-6\t\">Class</h3>\r\n        {!loading && data ? (\r\n          <div>\r\n            <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n              {data.classes.map((classe, i) => {\r\n                return <ClassCard editor key={classe.id} data={classe} />;\r\n              })}\r\n            </div>\r\n            <div className=\"flex justify-end\">\r\n              <Link to=\"/class\">\r\n                <p>see all class</p>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1  md:grid-cols-3  justify-center\t gap-4\">\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n            <div className=\"h-60 bg-secondary w-full animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Explore\\Explore.js",["177"],"import { useQuery, gql } from \"@apollo/client\";\r\nimport CategoryCard from \"../../components/Card/CategoryCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nconst DATA = gql`\r\n  query explore {\r\n    categories(sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      slug\r\n      thumbnail {\r\n        url\r\n      }\r\n    }\r\n    popular {\r\n      videos(limit: 2) {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n    videos(sort: \"updated_at:desc\") {\r\n      id\r\n      judul\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n  }\r\n`;\r\nexport default function Explore() {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  let show = <div>loading...</div>;\r\n  if (!loading && data) {\r\n    show = (\r\n      <>\r\n        <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\r\n          {data.categories.map((category) => {\r\n            return (\r\n              <Link\r\n                key={category.id}\r\n                to={`${category.slug ? \"/category/\" + category.slug : \"/\"}`}\r\n              >\r\n                <CategoryCard category={category} />\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-2xl\tp-2 font-bold mt-6\t\">Popular</h3>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 mt-4\">\r\n            {data.popular.videos.map((video) => {\r\n              return (\r\n                <Link\r\n                  key={video.id}\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                >\r\n                  <ContentCard popular data={video} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"mt-20 grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {data.videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  key={video.id}\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"w-screen container mx-auto lg:px-20\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Content</title>\r\n        <meta name=\"description\" content=\"Content for Bicara Project\" />\r\n      </Helmet>\r\n      {show}\r\n    </div>\r\n  );\r\n}\r\n",["178","179"],"E:\\__code\\test\\bicara-website\\src\\containers\\About\\About.js",["180","181"],"E:\\__code\\test\\bicara-website\\src\\containers\\Class\\Class.js",["182"],"import { useQuery, gql } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport banner from \"../../assets/images/bannerClass.jpg\";\r\nimport ClassCard from \"../../components/Card/ClassCard\";\r\nconst DATA = gql`\r\n  query getClasses {\r\n    classes(sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      slug\r\n      description\r\n      thumbnail {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Class = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  let show = <div>Loading...</div>;\r\n  if (!loading && data) {\r\n    show = (\r\n      <>\r\n        <div className=\"mb-10\">\r\n          <img src={banner} alt=\"CLASS\" />\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <div className=\"container mx-auto lg:px-20\">\r\n            <div className=\"grid grid-cols-2  md:grid-cols-3  justify-center\t gap-4\">\r\n              {data.classes.map((classe, i) => {\r\n                return <ClassCard editor key={classe.id} data={classe} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Class</title>\r\n        <meta name=\"description\" content=\"Class for Bicara Project\" />\r\n      </Helmet>\r\n      {show}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n",["183","184"],"E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\SignIn\\SignIn.js",[],["185","186"],"E:\\__code\\test\\bicara-website\\src\\containers\\Auth\\Login\\Login.js",[],"E:\\__code\\test\\bicara-website\\src\\Constant.js",[],["187","188"],"E:\\__code\\test\\bicara-website\\src\\containers\\Video\\Video.js",["189","190"],"import { useQuery, gql } from \"@apollo/client\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst DATA = gql`\r\n  query Video($slug: String!) {\r\n    videoBySlug(slug: $slug) {\r\n      id\r\n      slug\r\n      published_at\r\n      judul\r\n      by\r\n      description\r\n      source\r\n      categories {\r\n        id\r\n        name\r\n      }\r\n    }\r\n    videos(limit: 5, sort: \"published_at:desc\") {\r\n      id\r\n      thumbnail {\r\n        url\r\n      }\r\n      judul\r\n      slug\r\n    }\r\n  }\r\n`;\r\n\r\nconst Video = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = null;\r\n  if (data) {\r\n    const { source, judul, by, description, categories } = data.videoBySlug;\r\n    let news = data.videos.map((video) => {\r\n      return (\r\n        <Link\r\n          to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n          key={video.id}\r\n        >\r\n          <ContentCard rounded key={video.id} data={video} />\r\n        </Link>\r\n      );\r\n    });\r\n    show = (\r\n      <div className=\"container mx-auto px-10 flex items-center flex-col\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{judul}</title>\r\n          <meta name=\"description\" content={description} />\r\n        </Helmet>\r\n        <div className=\"w-96 md:w-700\">\r\n          <div className=\"relative h-0 pb-fluid-video \">\r\n            <ReactPlayer\r\n              className=\"absolute top-0 left-0 \"\r\n              controls={true}\r\n              pip\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              url={source}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"grid md:grid-cols-4 gap-4\">\r\n          <div className=\"md:col-span-3\">\r\n            <h2 className=\"text-2xl mb-4 text-bold\">{judul}</h2>\r\n            <p className=\"text-gray-300\">by {by}</p>\r\n            <ReactMarkdown className=\"markdown\">{description}</ReactMarkdown>\r\n          </div>\r\n          <div>{news}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data && !loading ? (\r\n        show\r\n      ) : (\r\n        <div>\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Video</title>\r\n            <meta name=\"description\" content=\"Video For Bicara Project\" />\r\n          </Helmet>\r\n          loading ...{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n",["191","192"],"E:\\__code\\test\\bicara-website\\src\\Provider\\UserProvider\\UserProvider.js",["193"],"import { createContext, useState, useEffect } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst DATA = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      username\r\n      email\r\n    }\r\n  }\r\n`;\r\nexport const UserContext = createContext({\r\n  isAuth: false,\r\n  ID: \"\",\r\n  username: \"\",\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const { loading, error, data } = useQuery(DATA);\r\n\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    ID: \"\",\r\n    isAuth: false,\r\n  });\r\n\r\n  const login = (login) => {\r\n    localStorage.setItem(\"token\", login.jwt);\r\n    setUser((user) => ({\r\n      username: login.user.username,\r\n      ID: login.user.id,\r\n      isAuth: true,\r\n    }));\r\n  };\r\n\r\n  // Logout updates the user data to default\r\n  const logout = () => {\r\n    localStorage.setItem(\"token\", \"\");\r\n    setUser((user) => ({\r\n      username: \"\",\r\n      ID: \"\",\r\n      IsAuth: false,\r\n    }));\r\n  };\r\n  useEffect(() => {\r\n    if (!loading && data && !error) {\r\n      setUser((user) => ({\r\n        username: data.me.username,\r\n        ID: data.me.id,\r\n        isAuth: true,\r\n      }));\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n",["194","195"],"E:\\__code\\test\\bicara-website\\src\\containers\\Category\\Category.js",["196","197","198"],"import { useQuery, gql, from } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nimport { Helmet } from \"react-helmet\";\r\nconst DATA = gql`\r\n  query Category($slug: String!) {\r\n    categoryBySlug(slug: $slug) {\r\n      id\r\n      slug\r\n      published_at\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      videos {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Category = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Category</title>\r\n        <meta name=\"description\" content=\"Category for Bicara Project\" />\r\n      </Helmet>\r\n      <div>Loading...</div>\r\n    </>\r\n  );\r\n  if (!loading && data) {\r\n    const { id, name, description, thumbnail, videos } = data.categoryBySlug;\r\n    show = (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{name}</title>\r\n          <meta name=\"description\" content={description} />\r\n        </Helmet>\r\n        <div className=\"flex justify-center \">\r\n          <img src={thumbnail.url} alt={name} />\r\n        </div>\r\n        <div className=\"container mx-auto lg:px-20\">\r\n          <div className=\"mt-20 grid grid-cols-1 lg:grid-cols-2 justify-center\t gap-4\">\r\n            {videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  key={video.id}\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                >\r\n                  <ContentCard rounded data={video} popular />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return <div>{show}</div>;\r\n};\r\n\r\nexport default Category;\r\n",["199","200"],"E:\\__code\\test\\bicara-website\\src\\containers\\Class\\ClassItem\\ClassItem.js",["201","202"],"import React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentCard from \"../../../components/Card/ContentCard\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nconst DATA = gql`\r\n  query Classes($slug: String) {\r\n    classBySlug(slug: $slug) {\r\n      id\r\n      name\r\n      description\r\n      content\r\n      thumbnail {\r\n        url\r\n      }\r\n      videos {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ClassItem = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = null;\r\n  if (data) {\r\n    const {\r\n      id,\r\n      name,\r\n      description,\r\n      thumbnail,\r\n      videos,\r\n      content,\r\n    } = data.classBySlug;\r\n\r\n    show = (\r\n      <div className=\"container mx-auto px-10 flex items-center flex-col\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{name}</title>\r\n          <meta name=\"description\" content={description} />\r\n        </Helmet>\r\n        <div className=\"flex justify-center w-1/2\">\r\n          <img src={thumbnail.url} alt={name} />\r\n        </div>\r\n        <div className=\"py-10 w-full  max-w-5xl\t sd\">\r\n          <h2 className=\"text-5xl mb-4 text-bold text-center\">{name}</h2>\r\n          <ReactMarkdown className=\"markdown \">{content}</ReactMarkdown>\r\n        </div>\r\n        <div>\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                  key={video.id}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {data && !loading ? (\r\n        show\r\n      ) : (\r\n        <div>\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Video</title>\r\n            <meta name=\"description\" content=\"Video For Bicara Project\" />\r\n          </Helmet>\r\n          loading ...{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassItem;\r\n",["203","204"],"E:\\__code\\test\\bicara-website\\src\\containers\\EditorsPick\\EditorsPick.js",["205","206","207"],"import React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContentCard from \"../../components/Card/ContentCard\";\r\nconst DATA = gql`\r\n  query Editor($slug: String) {\r\n    editorBySlug(slug: $slug) {\r\n      id\r\n      name\r\n      slug\r\n      thumbnail {\r\n        url\r\n      }\r\n      videos {\r\n        id\r\n        judul\r\n        thumbnail {\r\n          url\r\n        }\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst EditorsPick = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA, {\r\n    variables: {\r\n      slug: match.params.slug,\r\n    },\r\n  });\r\n  let show = null;\r\n  if (data) {\r\n    const { id, name, thumbnail, videos } = data.editorBySlug;\r\n\r\n    show = (\r\n      <div>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{name}</title>\r\n          <meta name=\"description\" content={name} />\r\n        </Helmet>\r\n        <div className=\"flex justify-center items-center \">\r\n          <img src={thumbnail.url} className=\"w-72 md:w-96\" />\r\n        </div>\r\n        <div>\r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n            {videos.map((video, i) => {\r\n              return (\r\n                <Link\r\n                  to={`${video.slug ? \"/collection/\" + video.slug : \"/\"}`}\r\n                  key={video.id}\r\n                >\r\n                  <ContentCard rounded data={video} hide={i > 3} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {data && !loading ? (\r\n        show\r\n      ) : (\r\n        <div>\r\n          <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <title>Video</title>\r\n            <meta name=\"description\" content=\"Video For Bicara Project\" />\r\n          </Helmet>\r\n          loading ...{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorsPick;\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\Event.js",["208"],"import React from \"react\";\r\nimport banner from \"../../assets/images/bannerEvent.jpg\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport EventCard from \"../../components/Card/EventCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nconst DATA = gql`\r\n  query event {\r\n    acaras(sort: \"published_at:desc\") {\r\n      id\r\n      name\r\n      thumbnail {\r\n        url\r\n      }\r\n      slug\r\n    }\r\n  }\r\n`;\r\nconst EventPage = ({ match }) => {\r\n  const { loading, error, data } = useQuery(DATA);\r\n  let show = <div>Loading...</div>;\r\n  if (!loading && data) {\r\n    show = (\r\n      <>\r\n        <div className=\"mb-10\">\r\n          <img src={banner} alt=\"CLASS\" />\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <div className=\"container mx-auto lg:px-20\">\r\n            <div className=\"grid grid-cols-2 lg:grid-cols-4 justify-center\t gap-4\">\r\n              {data.acaras.map((event, i) => {\r\n                return (\r\n                  <Link\r\n                    to={`${event.slug ? \"/event/\" + event.slug : \"/\"}`}\r\n                    key={event.id}\r\n                  >\r\n                    <EventCard rounded data={event} />\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Event</title>\r\n        <meta name=\"description\" content=\"Event for Bicara Project\" />\r\n      </Helmet>\r\n      {show}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","E:\\__code\\test\\bicara-website\\src\\containers\\Event\\EventItem\\EventItem.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\CategoryCard.js",[],["209","210"],"E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\Coursel.js",[],["211","212"],"E:\\__code\\test\\bicara-website\\src\\components\\Footer\\Footer.js",["213"],"E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselCoba.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\ClassCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\ContentCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Navbar\\Navbar.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\UI\\Button\\Button.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\EventCard.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\UI\\Input\\Input.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\Sidebar.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Card\\StaffCard.js",["214"],"// import image from \"../../assets/images/raya.png\";\r\nconst StaffCard = ({ data }) => {\r\n  const { name, desc, role, photo } = data;\r\n  return (\r\n    <a href={desc} target=\"_blank\">\r\n      <div className=\"px-10 \">\r\n        <figure className=\"bg-gray-100 rounded-xl p-8\">\r\n          <img\r\n            className=\"w-32 h-32 rounded-full mx-auto object-cover\"\r\n            src={photo.url}\r\n            alt={name}\r\n          />\r\n          <div className=\"pt-6  text-center  space-y-4\">\r\n            {/* <blockquote>\r\n            <p className=\"text-lg font-semibold\">“{desc}”</p>\r\n          </blockquote> */}\r\n            <figcaption className=\"font-medium\">\r\n              <div className=\"text-indigo-600\">{name}</div>\r\n              <div className=\"text-gray-500\">{role}</div>\r\n              <div className=\"text-gray-500\">of Bicara Project</div>\r\n            </figcaption>\r\n          </div>\r\n        </figure>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\nexport default StaffCard;\r\n","E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Coursel\\CourselItem\\CourselItemCoba.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\Navigation\\Sidebar\\DrawerToggle\\DrawerToggle.js",[],"E:\\__code\\test\\bicara-website\\src\\components\\UI\\Backdrop\\Backdrop.js",[],{"ruleId":"215","severity":1,"message":"216","line":7,"column":39,"nodeType":"217","messageId":"218","endLine":7,"endColumn":42},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"219","replacedBy":"223"},{"ruleId":"221","replacedBy":"224"},{"ruleId":"219","replacedBy":"225"},{"ruleId":"221","replacedBy":"226"},{"ruleId":"219","replacedBy":"227"},{"ruleId":"221","replacedBy":"228"},{"ruleId":"215","severity":1,"message":"229","line":60,"column":20,"nodeType":"217","messageId":"218","endLine":60,"endColumn":25},{"ruleId":"215","severity":1,"message":"229","line":37,"column":20,"nodeType":"217","messageId":"218","endLine":37,"endColumn":25},{"ruleId":"219","replacedBy":"230"},{"ruleId":"221","replacedBy":"231"},{"ruleId":"215","severity":1,"message":"229","line":26,"column":20,"nodeType":"217","messageId":"218","endLine":26,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":98,"column":11,"nodeType":"234","endLine":98,"endColumn":57},{"ruleId":"215","severity":1,"message":"229","line":20,"column":20,"nodeType":"217","messageId":"218","endLine":20,"endColumn":25},{"ruleId":"219","replacedBy":"235"},{"ruleId":"221","replacedBy":"236"},{"ruleId":"219","replacedBy":"237"},{"ruleId":"221","replacedBy":"238"},{"ruleId":"219","replacedBy":"239"},{"ruleId":"221","replacedBy":"240"},{"ruleId":"215","severity":1,"message":"229","line":35,"column":20,"nodeType":"217","messageId":"218","endLine":35,"endColumn":25},{"ruleId":"215","severity":1,"message":"241","line":42,"column":45,"nodeType":"217","messageId":"218","endLine":42,"endColumn":55},{"ruleId":"219","replacedBy":"242"},{"ruleId":"221","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":54,"column":6,"nodeType":"246","endLine":54,"endColumn":12,"suggestions":"247"},{"ruleId":"219","replacedBy":"248"},{"ruleId":"221","replacedBy":"249"},{"ruleId":"215","severity":1,"message":"250","line":1,"column":25,"nodeType":"217","messageId":"218","endLine":1,"endColumn":29},{"ruleId":"215","severity":1,"message":"229","line":28,"column":20,"nodeType":"217","messageId":"218","endLine":28,"endColumn":25},{"ruleId":"215","severity":1,"message":"251","line":44,"column":13,"nodeType":"217","messageId":"218","endLine":44,"endColumn":15},{"ruleId":"219","replacedBy":"252"},{"ruleId":"221","replacedBy":"253"},{"ruleId":"215","severity":1,"message":"229","line":29,"column":20,"nodeType":"217","messageId":"218","endLine":29,"endColumn":25},{"ruleId":"215","severity":1,"message":"251","line":37,"column":7,"nodeType":"217","messageId":"218","endLine":37,"endColumn":9},{"ruleId":"219","replacedBy":"254"},{"ruleId":"221","replacedBy":"255"},{"ruleId":"215","severity":1,"message":"229","line":27,"column":20,"nodeType":"217","messageId":"218","endLine":27,"endColumn":25},{"ruleId":"215","severity":1,"message":"251","line":34,"column":13,"nodeType":"217","messageId":"218","endLine":34,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":44,"column":11,"nodeType":"234","endLine":44,"endColumn":63},{"ruleId":"215","severity":1,"message":"229","line":20,"column":20,"nodeType":"217","messageId":"218","endLine":20,"endColumn":25},{"ruleId":"219","replacedBy":"256"},{"ruleId":"221","replacedBy":"257"},{"ruleId":"219","replacedBy":"258"},{"ruleId":"221","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":20,"column":15,"nodeType":"262","endLine":20,"endColumn":30},{"ruleId":"260","severity":1,"message":"261","line":5,"column":20,"nodeType":"262","endLine":5,"endColumn":35},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","no-native-reassign",["263"],"no-negated-in-lhs",["264"],["263"],["264"],["263"],["264"],["263"],["264"],"'error' is assigned a value but never used.",["263"],["264"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["263"],["264"],["263"],["264"],["263"],["264"],"'categories' is assigned a value but never used.",["263"],["264"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["265"],["263"],["264"],"'from' is defined but never used.","'id' is assigned a value but never used.",["263"],["264"],["263"],["264"],["263"],["264"],["263"],["264"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},"Update the dependencies array to be: [data, error, loading]",{"range":"268","text":"269"},[1124,1130],"[data, error, loading]"]